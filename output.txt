为了让 `easy_byzerllm` 直接调用 `byzerllm_command` 的 `main` 方法而不是使用 `subprocess`，我们需要修改 `easy_byzerllm_command.py` 文件。以下是需要的 *SEARCH/REPLACE* 块：

```python
##File: /Users/allwefantasy/projects/byzer-llm/src/byzerllm/easy_byzerllm_command.py
<<<<<<< SEARCH
import subprocess
=======
from byzerllm.byzerllm_command import main as byzerllm_main
>>>>>>> REPLACE
```

```python
##File: /Users/allwefantasy/projects/byzer-llm/src/byzerllm/easy_byzerllm_command.py
<<<<<<< SEARCH
    command = ["byzerllm"] + sys.argv[1:]
    result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    print(result.stdout)
    print(result.stderr, file=sys.stderr)
    sys.exit(result.returncode)
=======
    byzerllm_main(sys.argv[1:])
>>>>>>> REPLACE
```

这些修改将：

1. 移除 `subprocess` 的导入，改为从 `byzerllm.byzerllm_command` 导入 `main` 函数并重命名为 `byzerllm_main`。

2. 移除使用 `subprocess.run` 执行 `byzerllm` 命令的代码，改为直接调用 `byzerllm_main` 函数，并传入 `sys.argv[1:]` 作为参数（排除第一个参数，因为它是脚本名称）。

这样修改后，`easy_byzerllm` 将直接在同一个 Python 进程中调用 `byzerllm_command` 的 `main` 函数，而不是通过 `subprocess` 执行一个新的进程。