auto_merge: editblock
human_as_model: true
include_file:
- ./base/base.yml
query: "用中文写一篇byzer storage的文章,参考实际代码以及下面的实力:from byzerllm.apps.byzer_storage.simple_api\
  \ import ByzerStorage, DataType, FieldOption,SortOption\n\n# 初始化 EasyStorage\nstorage\
  \ = ByzerStorage(\"byzerai_store\", \"my_database1\", \"my_table4s\")\n_ = (\n \
  \   storage.schema_builder()\n    ## 主键，字符串\n    .add_field(\"_id\", DataType.STRING)\n\
  \    ## 可以作为where条件过滤的字段\n    .add_field(\"name\", DataType.STRING)\n    ## 可以作为搜索字段\n\
  \    .add_field(\"content\", DataType.STRING, [FieldOption.ANALYZE])\n    ## 不需要索引的字段，会原模原样存储\n\
  \    .add_field(\"raw_content\", DataType.STRING, [FieldOption.NO_INDEX])    \n\
  \    ## 数组字段\n    .add_array_field(\"summary\", DataType.FLOAT)    \n    ## 需要排序的字段\n\
  \    .add_field(\"created_time\", DataType.LONG, [FieldOption.SORT])    \n    .execute()\n\
  )\n\n## st(\n# field(_id,long),\n# field(name,string),\n# field(content,string,analyze),\n\
  # field(raw_content,string,no_index),\n# field(summary,array(float)),\n# field(created_time,long,sort)\n\
  # )\n\n# 准备数据\ndata = [\n    {\"_id\": \"1\", \"name\": \"Hello\", \"content\":\
  \ \"Hello, world!\", \"raw_content\": \"Hello, world!\", \"summary\": \"hello world\"\
  , \"created_time\": 1612137600},\n    {\"_id\": \"2\", \"name\": \"Byzer\", \"content\"\
  : \"Byzer, world!\", \"raw_content\": \"Byzer, world!\", \"summary\": \"byzer\"\
  , \"created_time\": 1612137601},\n    {\"_id\": \"3\", \"name\": \"AI\", \"content\"\
  : \"AI, world!\", \"raw_content\": \"AI, world!\", \"summary\": \"AI\", \"created_time\"\
  : 16121376002},\n    {\"_id\": \"4\", \"name\": \"ByzerAI\", \"content\": \"ByzerAI,\
  \ world!\", \"raw_content\": \"ByzerAI, world!\", \"summary\": \"ByzerAi\", \"created_time\"\
  : 16121376003},\n]\n\n# 写入Storage\nstorage.write_builder().add_items(data,vector_fields=[\"\
  summary\"],search_fields=[\"content\"]).execute()\n\n# commit 写入\nstorage.commit()\n\
  \n# 搜索\nquery = storage.query_builder()\nquery.set_vector_query(\"ByzerAi\",fields=[\"\
  summary\"])\nresults = query.set_search_query(\"Hello\",fields=[\"content\"]).execute()\n\
  print(results)\n\n## 过滤之后再做搜索\nquery = storage.query_builder()\nquery.and_filter().add_condition(\"\
  name\",\"AI\").build()\nquery.set_vector_query(\"ByzerAi\",fields=\"summary\")\n\
  results = query.set_search_query(\"Hello\",fields=[\"content\"]).execute()\nprint(results)\n\
  \n## 过滤再做排序\nquery = storage.query_builder()\nquery.and_filter().add_condition(\"\
  name\",\"AI\").build().sort(\"created_time\",SortOption.DESC)\nresults = query.execute()\n\
  print(results)\n\n## 根据ID做删除\nstorage.delete_by_ids([\"3\"])\n\nquery = storage.query_builder()\n\
  query.and_filter().add_condition(\"name\",\"AI\").build()\nresults = query.execute()\n\
  print(\"====\")\nprint(results)\n\n## 删除表\nstorage.drop_table()   文章放到 docs/zh 目录下,名字叫\
  \  005_byzer_storage_最易用的AI存储引擎.md"
skip_build_index: true
skip_confirm: true
urls:
- /Users/allwefantasy/projects/byzer-llm/src/byzerllm/utils/retrieval/__init__.py
- /Users/allwefantasy/projects/byzer-llm/src/byzerllm/records/__init__.py
- /Users/allwefantasy/projects/byzer-llm/src/byzerllm/apps/byzer_storage/simple_api.py
- /Users/allwefantasy/projects/byzer-llm/src/byzerllm/apps/agent/extensions/simple_retrieval_client.py
- /Users/allwefantasy/projects/byzer-retrieval/src/main/java/tech/mlsql/retrieval/schema/SimpleSchemaParser.java
